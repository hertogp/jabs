#!/usr/bin/python3
# -*- coding: utf-8  -*-

'''
namedrop - drop some names/info found by ip adresses in some csv file;
'''

import sys
import pandas as pd
import numpy as np
import pytricia as pt

#-- Read csv files

# /*      _\|/_
#         (o o)
#  +---oOO-{_}-OOo-----------------------------------------------------------+
#--| ggsn.csv                                                                |
#  |                                                                         |
#  |   ggsn,user,gsm,nas                                                     |
#  |   GGSN Vodafone TLO,N370-53-550L-CE19-001-VOD,31631752134,10.10.10.81   |
#  |   GGSN Vodafone TLO,A12-135-300R-CE19-001-VOD,31611736540,10.10.10.81   |
#  |                                                                         |
#--| gsm.csv                                                                 |
#  |                                                                         |
#  |   gsm,apn,nas                                                           |
#  |   31631752134,nnvlo.rijkswaterstaat.nl,missing                          |
#  |   31653944803,wks.vicnet.nl,10.10.10.190                                |
#  |                                                                         |
#--| routes.csv                                                              |
#  |                                                                         |
#  |   type,subnet,gateway,vpn                                               |
#  |   B,172.17.39.0/24,10.249.8.1,HWN-VICNET                                |
#  |   B,172.16.61.0/24,10.249.0.73,IVS90:IVS90                              |
#  |                                                                         |
#--| users.csv                                                               |
#  |                                                                         |
#  |   user,ip,apn,nas                                                       |
#  |   A10-1-550L-CE19-001-KPN,172.31.39.27,missing,missing                  |
#  |   A10-1-550L-CE19-001-VOD,172.31.35.27,missing,10.10.10.81              |
#  +-------------------------------------------------------------------------*/



# - IP Lookup tables
# vpn[ subnet ] -> (gw, vpn)
# usr[ ipaddr ] -> (name, nas, apn, ggsn)
# - Hash
# via[ name ] -> ipaddr

#-- IPT table, 1 tbl ip -> name, vpn
def refactorme():
    ipt = pt.PyTricia()
    ipt['0.0.0.0/0'] = ('noname', 'novpn')

    f = pd.read_csv('./scr/sims/routes.csv', sep=',').drop_duplicates('subnet', keep='first')
    for idx, row in f.iterrows():
        try:
            ipt[row.subnet] = ('noname', row.vpn)
        except Exception as e:
            pass

    f = pd.read_csv('./scr/sims/users.csv', sep=',').drop_duplicates('user', keep='first')
    for idx, row in f.iterrows():
        try:
            ipt[row.ip] = (row.user, ipt[row.ip][-1])
        except Exception as e:
            pass

    print('ipt table has {} entries'.format(len(ipt)))

    #-- Build GSM table gsm[8digits] -> hostname, ggsn, apn
    #  Build table: [316].... -> name, ip, apn, nas, vpn
    gsm = {}
    empty = {'ggsn':'?', 'host':'?', 'nas':'?',
             'apn':'?', 'ip':'0.0.0.0', 'vpn': 'n/a'}
    f = pd.read_csv('./scr/sims/ggsn.csv', sep=',')
    f = f.drop_duplicates('gsm', keep='first')
    for idx, row in f.iterrows():
        nr = str(row.gsm)[3:]
        h = gsm.setdefault(nr, empty.copy())
        h.update({'ggsn': row.ggsn, 'host': row.user, 'nas': row.nas})

    f = pd.read_csv('./scr/sims/gsm.csv', sep=',')
    f = f.drop_duplicates('gsm', keep='first')
    for idx, row in f.iterrows():
        nr = str(row.gsm)[3:]
        h = gsm.setdefault(nr, empty.copy())
        if row.apn != 'missing':
            h['apn']= row.apn
        if row.nas != 'missing':
            h['nas'] = row.nas

    # use name to lookup ip in users.csv
    name2ip = {}
    f = pd.read_csv('./scr/sims/users.csv', sep=',')
    f = f.drop_duplicates('user', keep='first')
    for idx, row in f.iterrows():
        if row.user == 'missing': continue
        if row.ip == 'missing': continue
        name2ip[row.user] = row.ip
    for k,h in gsm.items():
        ip = name2ip.get(h['host'], None)
        if ip is None: continue
        h['ip'] = ip
        try:
            vpn = ipt[ip][-1]
            h['vpn'] = vpn
        except Exception as e:
            pass

    # Some stats
    for k,v in gsm.items(): print(k,v)
    print('we have {} entries in ipt'.format(len(ipt)))

    keys = empty.keys()
    with open('./scr/delme.csv', 'w') as f:
        f.write('gsm,' + ','.join(keys))
        f.write("\n")
        for k,v in gsm.items():
            if v['ip'] == '0.0.0.0': continue
            f.write(k+",")
            f.write(','.join(str(v[k]) for k in keys))
            f.write("\n")

    #--- 
    migr = pd.read_csv('./scr/sims/migratie.csv', sep=',')
    # migr['vpn'] = migr['gsm'].apply(lambda x: gsm.get(x, empty).get('vpn'))

    for idx,row in migr.iterrows():
        h = gsm.get(row.gsm, empty)
        try:
            i = ipt[row.calling_ip]
        except Exception as e:
            i = ('n/a', 'n/a')
        print(row.gsm, row.calling_ip, h['ip'], row.calling_host, h['vpn'], i, h['apn'], h['ggsn'])

    print(migr.head())

    print(ipt['10.117.148.72'])
    print(ipt['172.22.90.70'])


def main(argv):
    print('Main returning success!')

    return 0


if __name__ == '__main__':
    sys.exit(main(sys.argv))

